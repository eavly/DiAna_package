---
title: "v02_Disproportionality_Analysis"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{v02_Disproportionality_Analysis}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

This tutorial will show you how to perform simple and advanced disproportionality analyses. While this tutorial recursively redefine the object of study and the background reference group, it does so to provide a pedagogical flow. It is recommended to design the analysis a priori, and clearly document and justify any deviation from the original design.

## Requisites

This tutorial requires that you have first:

1.  installed R and R Studio,

2.  installed the DiAna package,

3.  and set up your project folder.

Otherwise get back to the ReadMe and follow the instructions.

It is also recommended, but not necessary, that you have read the previous vignettes.

## Start the subproject

From the DiAna main project, we open a new R script and run the snippet 'new_FAERS_project' to set up a project.

```{r setup_subproject}
# Information -----------------------------------------------------------------
## Project title --------------------------------------------------------------
### v02_Disproportionality analysis
## Data -----------------------------------------------------------------------
### FDA Adverse Event Reporting System Quarterly Data

## Authors --------------------------------------------------------------------
### Michele Fusaroli

## Version --------------------------------------------------------------------
### Set up: 2024-07-29
### Last update: 2024-07-29
### DiAna version: 2.1.0

# Set up ----------------------------------------------------------------------
## upload DiAna ---------------------------------------------------------------
library(DiAna)

## Project_path ---------------------------------------------------------------
DiAna_path <- here::here()
project_name <- "v02_Disproportionality_Analysis"
project_path <- paste0(DiAna_path, "/projects/", project_name)
if (!file.exists(project_path)) {
  dir.create(project_path)
}
project_path <- paste0(project_path, "/")

## FAERS_version --------------------------------------------------------------

FAERS_version <- "24Q1"

## Import data ----------------------------------------------------------------
import("DRUG")
import("REAC")

## Input files ----------------------------------------------------------------

## Output files ---------------------------------------------------------------

## Definitions ----------------------------------------------------------------

## Reference groups -----------------------------------------------------------

## Descriptive analysis -------------------------------------------------------

## Disproportionality analysis ------------------------------------------------

## Case by case analysis ------------------------------------------------------
```

## Disproportionality analysis

#### Basic application

Let's explore the disproportionality_analysis function. We are investigating the possibility of a role of "aripiprazole" in causing "impulse control disorder", and we therefore draft the definitions of our objects of study.

```{r Definitions}
## Definitions --------------------------------------------------------------------------
drug_selected <- "aripiprazole"
reac_selected <- "impulse control disorder"
```

Already using these simple definitions, we can ran the simplest disproportionality analysis: we want to save in an object called disproportionality_df, the results of a disproportionality analysis on the drug and reaction specified.

```{r Disproportionality, eval=FALSE}
## Disproportionality analysis ----------------------------------------------------------
disproportionality_df <- disproportionality_analysis(
  drug_selected = drug_selected,
  reac_selected = reac_selected
)
```

As you run the command a message appears in the console: "Not all the events selected were found in the database, check the following terms for any misspelling or alternative nomenclature: impulse control disorder. Would you like to revise the query? (Yes/no/cancel)". This message implies that the exact term "impulse control disorder" does not exists in our database. How can we proceed? We write "Yes" in the console and run the command with "return". The function warns us once again to revise our query, or definition of the object of study. How can we check the correct spelling? We can look into the MedDRA if we have it, or more quickly search directly in the database with the following command, that could be run just in the console since we do not need to keep it in our script.

```{r check_misspelling_query}
Reac[, .N, by = "pt"][order(-N)][grepl("impuls", pt)]
```

The previous command can be read as: "within the database Reac, count how many times (.N) each preferred term occurs (by="pt"). Then order the pt by decreasing N (order(-N)). Finally, filter only the rows with the pattern "impuls" in the pt. As you can see there are two terms that we should plausibly include in out analysis: impulsive behaviour, which is the term most used even if we did not even consider it, and "impulse-control disorder" which is the term we wanted to consider but has also a dash between the first two words. First, let's fix the definition. We get back to the definition section of our script and we fix it including the dash in the reaction pt as follows and we rerun the disproportionality analysis:

```{r fix_misspelling_query}
## Definitions --------------------------------------------------------------------------
drug_selected <- "aripiprazole"
reac_selected <- "impulse-control disorder"

## Disproportionality analysis ----------------------------------------------------------
disproportionality_df <- disproportionality_analysis(
  drug_selected = drug_selected,
  reac_selected = reac_selected
)
disproportionality_df
```

This time no error appears, and after few seconds we can see that our environment (window pane usually on the upper right) has been populated with a dataset called disproportionalitY_df. Calling the name of the object prints it in the console, and we can see that the object is now a dataset with one row (per drug-event combination) and 19 columns, including the name of the substance and the event, the instances of the contingency table, the median and 95% confidence interval of the Reporting Odds Ratio ROR and of the Information component, these same results summarised as a string in the following format "median (lower limit-upper limit) [N cases]". A Bonferroni column that specifies whether the ROR was still significant after correcting for multiple comparison, and two columns that summarise whether a signal exists (SDR) or not (no SDR) or exists but disappear at the correction for multiple comparison (weak SDR). In this case we have found a signal of disproportionate reporting using both the analyses. These columns exist to simplify input to further functions, such as, for example, the visualization using render_forest.

```{r render_forest, fig.height=3, fig.width=9}
render_forest(disproportionality_df)
render_forest(disproportionality_df, index = "ROR")
```

In these forest plots we see on the x axis the information component (by default) or the ROR if we specify it in the index parameter. The median is shown using the dot, whose size is proportional to the number of cases. The 95% confidence interval is shown by the line. A dashed vertical axis (on the 0 for the IC and on the 1 for the ROR) highlights the threshold of statistical significance, compared to which the lower limit of the confidence interval must be higher to identify a signal of disproportionate reporting. In this case, we identified a clear signal of disproportionate reporting using both methods.

#### Extend queries

As we said before, the definition is not exhaustive, and we risk missing many cases of impulsivity which used a different PT from "impulse-control disorder". In fact those undetected cases will be part of the background reference group and potentially distort the results. How can we extend the definition? Let's go back to the definition paragraph and add other interesting terms to the definition of impulse-control disorder, using a named list.

```{r extend_query, fig.height=3, fig.width=9}
## Definitions --------------------------------------------------------------------------
drug_selected <- "aripiprazole"
reac_selected <- list("impulse-control disorder" = list(
  "impulse-control disorder",
  "impulsive behaviour"
))

## Disproportionality analysis ----------------------------------------------------------
disproportionality_df <- disproportionality_analysis(
  drug_selected = drug_selected,
  reac_selected = reac_selected
)
disproportionality_df
render_forest(disproportionality_df)
```

You see now that the number of cases has increased from 286 to 701, and we still find a SDR.

#### Multiple queries

Taking this further, we should consider that this impulsivity manifests often as pervasive behaviors, such as gambling, compulsive shopping, hyperphagia, and hypersexuality. Here below we add an extended query for impulse-control disorders that we refined over the years (see Parkinsonism and Related Disorders 90 (2021) 79â€“83 for the documentation of how we obtained the first definition combining a scoping review and disproportionality analysis). We also use a further feature of the disproportionality_analysis function and run the analysis in parallel on the several possible behavioral manifestations of impulsivity, just adding other named elements to the list.

Specifically, we first define a named list called ICDs with the subqueries related with the different manifestations (e.g., gambling disorder could be reported either as gambling disorder or as gambling), and we then run rlist append to store in the reac_selected parameter both the individual sub-queries and the full query. When we run the analysis we see again the message that some of the terms ("erotophonophilia" and "frotteurism" were not found, but in this case we know that these terms are spelled correctly (it is just the case that noone used them in the FAERS yet) and we run "no" in the console to let the analysis proceed.

In this case we also add a further parameter to the render_forest function, to make it print each event in a different line

```{r multiple_definitions, fig.height=3, fig.width=9}
## Definitions --------------------------------------------------------------------------
drug_selected <- "aripiprazole"

ICDs <- list(
  "gambling disorder" = list("gambling disorder", "gambling"),
  "hypersexuality" = list(
    "compulsive sexual behaviour",
    "hypersexuality",
    "excessive masturbation",
    "excessive sexual fantasies",
    "libido increased",
    "sexual activity increased",
    "kluver-bucy syndrome"
  ),
  "paraphilia" = list(
    "erotophonophilia", "exhibitionism",
    "fetishism", "frotteurism",
    "masochism", "paraphilia", "paedophilia",
    "sadism", "transvestism", "voyeurism",
    "sexually inappropriate behaviour"
  ),
  "compulsive shopping" = list("compulsive shopping"),
  "hyperphagia" = list(
    "binge eating", "food craving", "hyperphagia",
    "increased appetite"
  ),
  "gaming disorder" = list("gaming disorder"),
  "pyromania" = list("pyromania"),
  "kleptomania" = list("kleptomania", "shoplifting"),
  "compulsive hoarding" = list("compulsive hoarding"),
  "excessive exercise" = list("excessive exercise"),
  "overwork" = list("overwork"),
  "poriomania" = list("poriomania"),
  "body-focused disorder" = list(
    "compulsive cheek biting",
    "compulsive lip biting",
    "dermatillomania",
    "dermatophagia", "nail picking",
    "compulsive handwashing",
    "trichotemnomania",
    "trichotillomania", "onychophagia",
    "thumb sucking"
  ),
  "stereotypy" = list("automatism", "stereotypy"),
  "impulsivity" = list(
    "impulse-control disorder",
    "impulsive behaviour",
    "disinhibition", "behavioural addiction",
    "abnormal behaviour"
  )
)
reac_selected <- rlist::list.append(ICDs, "ICD" = as.list(unlist(purrr::flatten(ICDs))))

## Disproportionality analysis ----------------------------------------------------------
disproportionality_df <- disproportionality_analysis(
  drug_selected = drug_selected,
  reac_selected = reac_selected
)
disproportionality_df
render_forest(disproportionality_df, row = "event")
```

The results now show 16 rows (one per drug-event combination), for which we have found all SDR apart that for excessive exercise and overwork for which we have found less than 3 cases (the minimum to identify an SDR with the IC. We can see in the render forests how the confidence interval is larger for combinations in which there are fewer cases (compare with the different size of the dots).

#### Positive and negative controls

The same considerations can in fact be performed also on the drug (we may want to check the association with aripiprazole alone and with its pharmacological class as a group (third generation antipsychotics: also brexpiprazole and cariprazine), and can be used to include also negative and positive controls: we may include "pramipexole" as a positive control (a drug which is known to cause impulsivity), "paracetamol" as a negative control (a drug which is known to not cause impulsivity), and potentially also some events that are known reactions to aripiprazole (e.g., insomnia, headache) and some events that are known with good certainty to not be reactions to aripiprazole ("liver injury").

In this case we may want to add to the render forest the option to give each its drug its facet, as seen in the script.

```{r including_controls, fig.height=3, fig.width=9}
## Definitions --------------------------------------------------------------------------
drug_selected <- list(
  "aripiprazole" = list("aripiprazole"),
  "TGAs" = list("aripiprazole", "brexpiprazole", "cariprazine"),
  "pramipexole" = list("pramipexole"), # positive control
  "paracetamol" = list("paracetamol")
) # negative control

ICDs <- list(
  "gambling disorder" = list("gambling disorder", "gambling"),
  "hypersexuality" = list(
    "compulsive sexual behaviour",
    "hypersexuality",
    "excessive masturbation",
    "excessive sexual fantasies",
    "libido increased",
    "sexual activity increased",
    "kluver-bucy syndrome"
  ),
  "paraphilia" = list(
    "erotophonophilia", "exhibitionism",
    "fetishism", "frotteurism",
    "masochism", "paraphilia", "paedophilia",
    "sadism", "transvestism", "voyeurism",
    "sexually inappropriate behaviour"
  ),
  "compulsive shopping" = list("compulsive shopping"),
  "hyperphagia" = list(
    "binge eating", "food craving", "hyperphagia",
    "increased appetite"
  ),
  "gaming disorder" = list("gaming disorder"),
  "pyromania" = list("pyromania"),
  "kleptomania" = list("kleptomania", "shoplifting"),
  "compulsive hoarding" = list("compulsive hoarding"),
  "excessive exercise" = list("excessive exercise"),
  "overwork" = list("overwork"),
  "poriomania" = list("poriomania"),
  "body-focused disorder" = list(
    "compulsive cheek biting",
    "compulsive lip biting",
    "dermatillomania",
    "dermatophagia", "nail picking",
    "compulsive handwashing",
    "trichotemnomania",
    "trichotillomania", "onychophagia",
    "thumb sucking"
  ),
  "stereotypy" = list("automatism", "stereotypy"),
  "impulsivity" = list(
    "impulse-control disorder",
    "impulsive behaviour",
    "disinhibition", "behavioural addiction",
    "abnormal behaviour"
  )
)
reac_selected <- rlist::list.append(ICDs,
  "ICD" = as.list(unlist(purrr::flatten(ICDs))),
  "insomnia" = list("insomnia"), # positive control
  "headache" = list("headache"), # positive control
  "liver injury" = list("liver injury")
) # negative control

## Disproportionality analysis ----------------------------------------------------------
# Positive and negative controls
disproportionality_df <- disproportionality_analysis(
  drug_selected = drug_selected,
  reac_selected = reac_selected
)
disproportionality_df
render_forest(disproportionality_df, row = "event", facet_v = "substance")
```

Here we see an extensive association of impulsive manifestations with aripiprazole, its class (which is in fact almost the same as aripiprazole as the other two drugs are far less used), and the positive control pramipexole (which shows also enough cases with excessive exercise, even if not enough cases with pyromania). Aripiprazole is not associated with liver injury and headache (as expected), while instead paracetamol is associated with both, the first a known reaction, the second a reverse causality (you take paracetamol to treat headache). Paracetamol is not associated with many of the impulsivity manifestations, but it is still associated with impulsivity, ICD, gambling and overwork (you see the red dots that in this plot identify an SDR). Some possible explanations may be present: overwork and the use of paracetamol to fight the subsequent migraine have a comprehensible association, but also impulsivity intended as a more general irritability due to the pain.

#### Focusing on suspected drugs

In fact, paracetamol is used so much that it could be in many cases just recorded as a concomitant. For this reason the next step is performing the same analysis only considering suspected drugs. We are not going to change anymore the definition section. Let's work only on the disproportionality one, specifying in the temp_drug (the drug database we want to use, which is the entire drug by default) only drugs which are recorded as primary or secondary suspect (rol_cod %in% c("PS","SS")). Remember to respond "no" in the console when the function asks you if you want to refine the query.

```{r only_suspect, fig.height=3, fig.width=9}
## Disproportionality analysis ----------------------------------------------------------
# Suspected drugs
disproportionality_df <- disproportionality_analysis(
  drug_selected = drug_selected,
  reac_selected = reac_selected,
  temp_drug = Drug[role_cod %in% c("PS", "SS")]
)
disproportionality_df
render_forest(disproportionality_df, row = "event", facet_v = "substance")
```

You see this way how all the associations between impulsivity and paracetamol disappear, including, interestingly, also the one with headache (but not the one with overwork).

#### Removing duplicates

Duplicates may also distort our results. The problem is that we are not sure which reports are duplicates and which are not. Applying a deduplication algorithm may therefore introduce even more distortion. The DiAna package already comes with multiple rule-based strategies to detect potential duplicates, and will soon add even more advanced probabilistic algorithms. The results of these duplicates detection is stored in the DEMO dataset. We therefore have to first import it, going back into the dedicated section and adding the following row together with the other two importing Drug and Reac:

```{r import_Demo}
## Import data ----------------------------------------------------------------
import("DEMO")
```

In the printed dataset we see that the last two columns are RB_duplicates and RB_duplicates_only_susp: the first is more conservative, considering as duplicates all the reports that have not only the same sex, age, country, event list, event date, and suspected drug list, but also the concomitants. The second algorithm considers instead only suspected drugs in the drug list.

Let's reduce the queries considered among the reactions to visualize better the differences in the disproportionality results obtained with the two different algorithms compared to the raw analysis. You can comment the previous generation to reac_selected with a \# if you want to keep it and then go back to the previous definition later.

In the disproportionality_analysis section we know include a loop over several possible restrictions of the background reference group: our raw and deduplicated datasets using the different algorithms (raw is the entire dataset, RB1 is the more conservative and RB2 the more speculative deduplication). You will have to answer no in the console every time you are asked (three times).

The disproportionality_df has now a row for each drug-event-background combination, and the background is specified in the "nested" column, which we specified as the "nested" parameter of the render_forest.

```{r deduplication_algorithms, fig.height=3, fig.width=9}
## Definitions --------------------------------------------------------------------------

# .....all the content before....

# reac_selected <- rlist::list.append(ICDs,"ICD"=as.list(unlist(purrr::flatten(ICDs))))
reac_selected <- list("ICD" = as.list(unlist(purrr::flatten(ICDs))))

## Disproportionality analysis ----------------------------------------------------------
# Deduplication
restrictions <- list(
  "raw" = list(Demo$primaryid),
  "RB1" = list(Demo[RB_duplicates == FALSE]$primaryid),
  "RB2" = list(Demo[RB_duplicates_only_susp == FALSE]$primaryid)
)
disproportionality_df <- data.table()
for (n in 1:length(restrictions)) {
  t <- restrictions[n]
  t_name <- names(t)
  t_pids <- unlist(t)
  df <- disproportionality_analysis(
    drug_selected = drug_selected,
    reac_selected = reac_selected,
    temp_drug = Drug[role_cod %in% c("PS", "SS")],
    restriction = t_pids
  )[, nested := t_name]
  disproportionality_df <- rbindlist(list(disproportionality_df, df), fill = TRUE)
}
disproportionality_df
render_forest(disproportionality_df, row = "event", facet_v = "substance", nested = "nested")
```

The forest plot shows in fact almost no difference when using the raw analysis compared to the two different rule-based deduplication algorithms available in DiAna for the investigated drug-event combination, resulting in a significant difference only for paracetamol (a signal for impulsivity appears when deduplicating, independently of the algorithm). For most drug-event combinations, we expect to find small differences when deduplicating, but it is always recommended to provide both raw and deduplicated analyses.

#### Restricting on indication

Another important application made possible by the disproportionality_analysis function is related with addressing expected biases. When investigating a potential causal role of aripiprazole in inducing impulsivity, we should consider that bipolar disorder, a major indication for using aripiprazole, is also a known risk factor for impulsivity and impulsive behaviors.

Could that be sufficient to explain the association (SDR) we found? To address, at least partly, this indication bias and answer this question we can restrict the analysis to patients sharing a diagnosis of bipolar disorder, and checking in this population with homogeneous values for the confounder whether impulsivity is more often recorded together with aripiprazole than with other drugs. For a pedagogical article on how to chose the background reference group (and why restricting on the confounder should be preferred to adjusting on it) see <https://doi.org/10.31219/osf.io/h5w9u>. We check for the presence of the confounder among the indications, and we therefore have to import the Indi database adding it to the import data section.

```{r import_Indi}
## Import data ----------------------------------------------------------------
import("INDI")
```

We can then search in the Indi dataset for the recording of bipolar disorder, and select their primaryids. To be more exhaustive in the identification of reports concerning patients diagnosed with bipolar disorder, thus collecting greater number of reports for the analysis, we search for bipolar disorder also in the Reac database (confusion may have arisen in the compilation), and for lithium (a specific tratment for bipolar disorder) among the drugs.

```{r retrieve_bipolar, fig.height=3, fig.width=9}
## Reference groups --------------------------------------------------------------------
bipolar_disorder_indi_pt <- unique(Indi[indi_pt == "bipolar disorder"]$primaryid)
bipolar_disorder_reac_pt <- unique(Reac[pt == "bipolar disorder"]$primaryid)
bipolar_disorder_drug <- unique(Drug[substance == "lithium"]$primaryid)
bipolar_disorder_total_pt <- union(union(bipolar_disorder_indi_pt, bipolar_disorder_reac_pt), bipolar_disorder_drug)

## Disproportionality analysis ----------------------------------------------------------

restrictions <- list(
  "raw" = as.list(Demo$primaryid),
  "indi_pt" = as.list(bipolar_disorder_indi_pt),
  "reac_pt" = as.list(bipolar_disorder_reac_pt),
  "drug" = as.list(bipolar_disorder_drug),
  "total" = as.list(bipolar_disorder_total_pt)
)
disproportionality_df <- data.table()
for (n in 1:length(restrictions)) {
  t <- restrictions[n]
  t_name <- names(t)
  t_pids <- unlist(t)
  df <- disproportionality_analysis(
    drug_selected = drug_selected,
    reac_selected = reac_selected,
    temp_drug = Drug[role_cod %in% c("PS", "SS")],
    restriction = t_pids
  )[, nested := t_name]
  disproportionality_df <- rbindlist(list(disproportionality_df, df), fill = TRUE)
}
disproportionality_df
render_forest(disproportionality_df, row = "event", facet_v = "substance", nested = "nested")
```

In this forest plot we see that in general, restricting to the confounder bipolar disorder, we see a smaller IC. Only paracetamol does not show a difference, as bipolar disorder configures more as a competitive exposure rather than a confounder (i.e., to be a confounder, a factor has to cause both the drug and the event, but bipolar disorder does not increase the chance of being prescribed paracetamol). We also see that the confidence interval is smaller when we manage to retrieve bigger background reference groups, and therefore using the information included in both Indi, Drug, and Reac is suggested.

We can also consider that bipolar disorder may have been reported using many other terms. How can we use the MedDRA HLGT "manic and bipolar mood disorders and disturbances" to make even bigger the reference group, still addressing the bias?

Note that this chunk of script works only if you have a MedDRA subscription and you have followed [https://github.com/fusarolimichele/DiAna](#0){.uri} instructions to make your own DiAna-compatible MedDRA.

```{r retrieve_with_MedDRA, fig.height=3, fig.width=9}
## Reference groups --------------------------------------------------------------------
# ....
import_MedDRA()
bipolar_disorder_total_hlgt <- union(
  union(
    Indi[indi_pt %in% MedDRA[hlgt == "manic and bipolar mood disorders and disturbances"]$pt]$primaryid,
    Reac[pt %in% MedDRA[hlgt == "manic and bipolar mood disorders and disturbances"]$pt]$primaryid
  ),
  bipolar_disorder_drug
)

## Disproportionality analysis ----------------------------------------------------------

restrictions <- list(
  "raw" = as.list(Demo$primaryid),
  "total_pt" = as.list(bipolar_disorder_total_pt),
  "total_hlgt" = as.list(bipolar_disorder_total_hlgt)
)
disproportionality_df <- data.table()
for (n in 1:length(restrictions)) {
  t <- restrictions[n]
  t_name <- names(t)
  t_pids <- unlist(t)
  df <- disproportionality_analysis(
    drug_selected = drug_selected,
    reac_selected = reac_selected,
    temp_drug = Drug[role_cod %in% c("PS", "SS")],
    restriction = t_pids
  )[, nested := t_name]
  disproportionality_df <- rbindlist(list(disproportionality_df, df), fill = TRUE)
}
disproportionality_df
render_forest(disproportionality_df, row = "event", facet_v = "substance", nested = "nested")
```

#### Addressing notoriety bias

The FDA warning in 2016-03-05 concerning aripiprazole-induced impulsivity may have inflated the reporting distorting the results (i.e., notoriety bias). To address this bias we can restrict only reports submitted before the date of the warning, and repeat the disproportionality analysis. We compare this result with the raw analysis, the restriction to bipolar disorder, the restriction to bipolar disorder pre-warning, and finally this last complete restriction with also deduplication. All these analyses are performed considering only suspected drugs.

```{r notoriety_bias, fig.height=3, fig.width=9}
## Reference groups ---------------------------------------------------------------------
warning_date <- 20160305
pre_warning <- Demo[ifelse(is.na(init_fda_dt), fda_dt < warning_date, init_fda_dt < warning_date)]$primaryid

## Disproportionality analysis ----------------------------------------------------------

restrictions <- list(
  "raw" = as.list(Demo$primaryid),
  "indication_bias" = as.list(bipolar_disorder_total_pt),
  "notoriety_bias" = as.list(pre_warning),
  "both_biases" = as.list(intersect(
    bipolar_disorder_total_pt,
    pre_warning
  )),
  "both_biases_dedup" = as.list(intersect(
    intersect(
      bipolar_disorder_total_pt, pre_warning
    ),
    Demo[RB_duplicates == FALSE]$primaryid
  ))
)
disproportionality_df <- data.table()
for (n in 1:length(restrictions)) {
  t <- restrictions[n]
  t_name <- names(t)
  t_pids <- unlist(t)
  df <- disproportionality_analysis(
    drug_selected = drug_selected,
    reac_selected = reac_selected,
    temp_drug = Drug[role_cod %in% c("PS", "SS")],
    restriction = t_pids
  )[, nested := t_name]
  disproportionality_df <- rbindlist(list(disproportionality_df, df), fill = TRUE)
}
disproportionality_df
render_forest(disproportionality_df, row = "event", facet_v = "substance", nested = "nested")
```

Here you see in green the results of the analysis restricting to the pre-warning. You can see that this analysis does not affect bipolar disorder nor headache, but it affects all the impulse control disorders apart gambling. Plausibly the FDA warning was based mainly on suspect aripiprazole-induced gambling disorder.

Therefore, you can see that even before the warning and taking into account all the considered biases, the FDA had enough information to publish the warning.

#### Disproportionality trend

Can we check when exactly a signal appeared in the FAERS? For example in the case of the disproportionality restricted to bipolar disorder and suspected drugs only?

For this inquiry, DiAna proposes a specific function: disproportionality_trend, which allow to adopt a granularity of a month, a quarter, or a year.

```{r disproportionality_trend, fig.height=3, fig.width=9}
## Import data --------------------------------------------------------------------------
import("DEMO_SUPP")
## Disproportionality analysis ----------------------------------------------------------
disproportionality_trend_df <- disproportionality_trend(
  drug_selected = "brexpiprazole",
  reac_selected = unlist(reac_selected),
  temp_drug = Drug[role_cod %in% c("PS", "SS")],
  time_granularity = "year"
)
plot_disproportionality_trend(disproportionality_trend_results = disproportionality_trend_df)
```

#### Comparing several disproportionality metrics

The ROR and the IC, while extremely common in pharmacovigilance, are not the only disproportionality metrics. To compare their results with other disproportionality metrics you can use the disproportionality_comparison function

```{r disproportionality_comparison}
disproportionality_comparison(
  drug_count = length(unique(Drug[substance == "aripiprazole" & role_cod %in% c("PS", "SS")]$primaryid)),
  event_count = length(unique(Reac[pt == "impulsive behaviour"]$primaryid)),
  drug_event_count = length(intersect(Drug[substance == "aripiprazole" & role_cod %in% c("PS", "SS")]$primaryid, Reac[pt == "impulsive behaviour"]$primaryid)),
  tot = nrow(Demo)
)
```
