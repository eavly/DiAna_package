drug_selected = "aripiprazole",
reac_selected = reac_selected,
event_names = names(reac_selected),
restriction = restriction,
order="drug"
)
df <- rbindlist(list(
df,
custom_group[, nested := "custom"]
),fill = TRUE)
render_forest(df, "IC", nested = TRUE,
nested_colors=c("salmon","goldenrod","steelblue"),
threshold =0, show_legend = TRUE,
row="event",levs_row = names(reac_selected), facet_v=NA)
reac_selected <- list("gambling disorder"=list("gambling disorder","gambling"),
"hypersexuality"= list("compulsive sexual behaviour",
"hypersexuality",
"excessive masturbation",
"excessive sexual fantasies",
"libido increased",
"sexual activity increased",
"kluver-bucy syndrome",
"erotophonophilia",
"exhibitionism","fetishism",
"frotteurism","masochism",
"paraphilia","paedophilia",
"sadism","transvestism",
"voyeurism",
"sexually inappropriate behaviour"),
"compulsive shopping"=list("compulsive shopping"),
"hyperphagia"=list("binge eating","food craving",
"hyperphagia","increased appetite"),
"kleptomania"=list("kleptomania","shoplifting"),
"bipolar disorder"=as.list(MedDRA[hlt=="bipolar disorders"]$pt))
custom_group <- disproportionality_analisis(
drug_selected = "aripiprazole",
reac_selected = reac_selected,
event_names = names(reac_selected),
restriction = restriction,
order="drug"
)
df <- rbindlist(list(
DPA_df[, nested := "main"],
DPA_df_deduplicated[, nested := "deduplicated"]
))
df <- rbindlist(list(
df,
custom_group[, nested := "custom"]
),fill = TRUE)
render_forest(df, "IC", nested = TRUE,
nested_colors=c("salmon","goldenrod","steelblue"),
threshold =0, show_legend = TRUE,
row="event",levs_row = names(reac_selected), facet_v=NA)
warning_date <- 20160305
pre_warning <- Demo[init_fda_dt < warning_date]$primaryid
restriction <- intersect(restriction,pre_warning)
# pre-warning ------------
warning_date <- 20160305
pre_warning <- Demo[init_fda_dt < warning_date]$primaryid
restriction <- intersect(restriction,pre_warning)
preW <- disproportionality_analisis(
drug_selected = "aripiprazole",
reac_selected = reac_selected,
event_names = names(reac_selected),
restriction = restriction,
order="drug"
)
df <- rbindlist(list(
df,
preW[, nested := "pre_warning"]
),fill = TRUE)
render_forest(df, "IC", nested = TRUE,
nested_colors=c("salmon","goldenrod","steelblue","limegreen"),
threshold =0, show_legend = TRUE,
row="event",levs_row = names(reac_selected), facet_v=NA)
# heatmap -----------
preW <- disproportionality_analisis(
drug_selected = list("aripiprazole","brexpiprazole","cariprazine","pramipexole","ropinirole","rotigotine"),
reac_selected = reac_selected,
event_names = names(reac_selected),
restriction = restriction,
order="drug"
)
##list of pts does not work anymore
heatmap_ROR <- function(ROR_df,drugs=drug_selected,text=NA,angle_text=0){
## function to visualize RORs
## Args
my_colors <- c("white","#fdfd96","#ff6961")
names(my_colors) <- c("no signal","light signal","strong signal")
drugs <- as.character(drugs)
ggplot(ROR_df,aes(x=drug,y=event))+
geom_tile(aes(fill=color),colour="black")+
geom_text(aes(label= ifelse(is.na(text),NA,label)),angle=angle_text)+
theme_classic()+
facet_grid(rows = vars(soc), scales = "free", space = "free") +
scale_fill_manual(name="color", values=my_colors)+
scale_x_discrete(position="top")+
theme(axis.text.x = element_text(size=10,angle = 90), axis.text.y = element_text(size=10,angle = 0),axis.title = element_blank(),
strip.text.y = element_text(angle=0))
}
View(df)
my_colors <- c("white","#fdfd96","#ff6961")
names(my_colors) <- c("no signal","light signal","strong signal")
# heatmap -----------
drug_selected <- list("aripiprazole","brexpiprazole","cariprazine","pramipexole","ropinirole","rotigotine")
drugs=drug_selected
text=NA
angle_text=0
drugs <- as.character(drugs)
df_multidrug <- disproportionality_analisis(
drug_selected = ,drug_selected,
reac_selected = reac_selected,
event_names = names(reac_selected),
restriction = restriction,
order="drug"
)
View(df_multidrug)
restriction <- intersect(deduplicated,bipolar_disorder)
df_multidrug <- disproportionality_analisis(
drug_selected = ,drug_selected,
reac_selected = reac_selected,
event_names = names(reac_selected),
restriction = restriction,
order="drug"
)
View(df_multidrug)
df_multidrug <- disproportionality_analisis(
drug_selected = ,drug_selected,
reac_selected = reac_selected,
event_names = names(reac_selected),
restriction = deduplicated,
order="drug"
)
df <- df_multidrug
View(df_multidrug)
ggplot(df,aes(x=drug,y=event))+
geom_tile(aes(fill=color),colour="black")+
geom_text(aes(label= ifelse(is.na(text),NA,label)),angle=angle_text)+
theme_classic()+
facet_grid(rows = vars(soc), scales = "free", space = "free") +
scale_fill_manual(name="color", values=my_colors)+
scale_x_discrete(position="top")+
theme(axis.text.x = element_text(size=10,angle = 90), axis.text.y = element_text(size=10,angle = 0),axis.title = element_blank(),
strip.text.y = element_text(angle=0))
ggplot(df,aes(x=drug,y=event))+
geom_tile(aes(fill=color),colour="black")+
geom_text(aes(label= ifelse(is.na(text),NA,label)),angle=angle_text)+
theme_classic()+
#facet_grid(rows = vars(soc), scales = "free", space = "free") +
scale_fill_manual(name="color", values=my_colors)+
scale_x_discrete(position="top")+
theme(axis.text.x = element_text(size=10,angle = 90), axis.text.y = element_text(size=10,angle = 0),axis.title = element_blank(),
strip.text.y = element_text(angle=0))
color="color_IC"
df <- df[, color := color_IC]
ggplot(df,aes(x=drug,y=event))+
geom_tile(aes(fill=color),colour="black")+
geom_text(aes(label= ifelse(is.na(text),NA,label)),angle=angle_text)+
theme_classic()+
#facet_grid(rows = vars(soc), scales = "free", space = "free") +
scale_fill_manual(name="color", values=my_colors)+
scale_x_discrete(position="top")+
theme(axis.text.x = element_text(size=10,angle = 90), axis.text.y = element_text(size=10,angle = 0),axis.title = element_blank(),
strip.text.y = element_text(angle=0))
ggplot(df_multidrug)+
geom_point(aes(x=drug,y=event,size=log10(cases),color=IC_lower))
ggplot(df_multidrug)+
geom_point(aes(x=drug,y=event,size=log10(cases),color=IC_lower))+
scale_color_gradient2(low = "gray",mid="white",high = "red",midpoint = 0)
ggplot(df_multidrug)+
geom_point(aes(x=drug,y=event,size=log10(cases),color=IC_lower))+
scale_color_gradient2(low = "gray",mid="white",high = "red",midpoint = 0)+
theme_bw()
# heatmap -----------
drug_selected <- list("aripiprazole","brexpiprazole","pramipexole","paracetamol","etanercept","nivolumab")
df_multidrug <- disproportionality_analisis(
drug_selected = ,drug_selected,
reac_selected = reac_selected,
event_names = names(reac_selected),
restriction = deduplicated,
order="drug"
)
ggplot(df_multidrug)+
geom_point(aes(x=drug,y=event,size=log10(cases),color=IC_lower))+
scale_color_gradient2(low = "gray",mid="white",high = "red",midpoint = 0)+
theme_bw()
citation("DiAna")
library(devtools)
styler::style_dir()
usethis::use_tidy_description()
build_readme()
styler::style_dir()
usethis::use_tidy_description()
build_readme()
styler::style_dir()
usethis::use_tidy_description()
build_readme()
styler::style_dir()
usethis::use_tidy_description()
build_readme()
library(devtools)
styler::style_dir()
usethis::use_tidy_description()
build_readme()
build_readme()
document()
load_all()
test()
install()
# remove.packages("DiAna")
library(DiAna)
citation(DiAna)
citation("DiAna")
library(devtools)
styler::style_dir()
#usethis::use_tidy_description()
build_readme()
document()
load_all()
test()
check()
install()
# remove.packages("DiAna")
library(DiAna)
# straightforward analysis --------
reac_selected <- list(
"gambling disorder",
"hypersexuality",
"compulsive shopping",
"hyperphagia",
"kleptomania",
"bipolar disorder"
)
Drug <- import("DRUG", "23Q1")
remove.packages("DiAna")
library(devtools)
styler::style_dir()
build_readme()
document()
load_all()
test()
install()
# remove.packages("DiAna")
library(DiAna)
Drug <- import("DRUG", "23Q1")
DiAna_url <- "https://osf.io/download/epkqf/"
quarter == "23Q1"
# Download and extract DiAna data
zip_path <- paste0(here(), "/data/", quarter, ".zip")
quarter = "23Q1"
library(devtools)
styler::style_dir()
build_readme()
document()
load_all()
test()
install()
library(devtools)
styler::style_dir()
build_readme()
document()
load_all()
test()
remove.packages("DiAna")
install()
load_all()
library(devtools)
load_all()
install()
library(DiAna)
library(DiAna)
# setup_DiAna("23Q1")
drug_selected <- "aripiprazole"
reac_selected <- list(
"gambling disorder",
"hypersexuality",
"compulsive shopping",
"hyperphagia",
"kleptomania",
"bipolar disorder"
"depression"
reac_selected <- list(
"gambling disorder",
"hypersexuality",
"compulsive shopping",
"hyperphagia",
"kleptomania",
"bipolar disorder",
"depression"
)
# setup_DiAna("23Q1")
drug_selected <- "aripiprazole"
reac_selected <- list(
"gambling disorder",
"hypersexuality",
"compulsive shopping",
"hyperphagia",
"kleptomania",
"bipolar disorder",
"headache"
)
Drug <- import("DRUG", "23Q1")
Reac <- import("REAC", "23Q1")
DPA_df <- disproportionality_analisis(
drug_selected,
reac_selected
)
render_forest(DPA_df, "IC", threshold = 0,
row = "event",
levs_row = reac_selected, facet_v = NA
)
##
MedDRA <- setDT(
read_delim("~/Desktop/DIANA-on-FAERS/External Sources/hltsoc_binder.csv",
";",
escape_double = FALSE, trim_ws = TRUE
)
)[, .(def, soc, hlgt, hlt, pt)] %>% distinct()
library(data.table)
##
MedDRA <- setDT(
read_delim("~/Desktop/DIANA-on-FAERS/External Sources/hltsoc_binder.csv",
";",
escape_double = FALSE, trim_ws = TRUE
)
)[, .(def, soc, hlgt, hlt, pt)] %>% distinct()
use_package("data.table", type = "depends")
styler::style_dir()
build_readme()
document()
remove.packages("DiAna")
load_all()
test()
check()
load_all()
library(devtools)
load_all()
install()
library(DiAna)
# setup_DiAna("23Q1")
drug_selected <- "aripiprazole"
reac_selected <- list(
"gambling disorder", #ICD
"hypersexuality", #ICD
"compulsive shopping", #ICD
"hyperphagia", #ICD
"kleptomania", #ICD
"bipolar disorder", #bias
"headache" #positive control
)
Drug <- import("DRUG", "23Q1")
Reac <- import("REAC", "23Q1")
DPA_df <- disproportionality_analisis(
drug_selected,
reac_selected
)
render_forest(DPA_df, "IC", threshold = 0,
row = "event",
levs_row = reac_selected, facet_v = NA
)
##
MedDRA <- setDT(
read_delim("~/Desktop/DIANA-on-FAERS/External Sources/hltsoc_binder.csv",
";",
escape_double = FALSE, trim_ws = TRUE
)
)[, .(def, soc, hlgt, hlt, pt)] %>% distinct()
##
deduplicated <- Demo[RB_duplicates_only_susp == FALSE]$primaryid
##
Demo <- import("DEMO", "23Q1")
Indi <- import("INDI", "23Q1")
deduplicated <- Demo[RB_duplicates_only_susp == FALSE]$primaryid
bipolar_disorder <- Indi[indi_pt %in% MedDRA[
hlgt == "manic and bipolar mood disorders and disturbances"
]$pt]$primaryid
deduplicated <- Demo[RB_duplicates_only_susp == FALSE]$primaryid
DPA_df_deduplicated <- disproportionality_analisis(
drug_selected,
reac_selected,
restriction = deduplicated
)
df <- rbindlist(list(
DPA_df[, nested := "main"],
DPA_df_deduplicated[, nested := "deduplicated"]
))
DPA_df_bipolar <- disproportionality_analisis(
drug_selected,
reac_selected,
restriction = bipolar_disorder
)
df <- rbindlist(list(
df,
DPA_df_bipolar[, nested := "bipolar"]
))
warning_date <- 20160305
pre_warning <- Demo[init_fda_dt < warning_date]$primaryid
preW <- disproportionality_analisis(
drug_selected,
reac_selected,
restriction = pre_warning
)
df <- rbindlist(list(
df,
preW[, nested := "pre_warning"]
))
View(MedDRA)
##
reac_selected <- list(
"gambling disorder" = list("gambling disorder", "gambling"),
"hypersexuality" = list("compulsive sexual behaviour","hypersexuality",
"excessive masturbation","excessive sexual fantasies","libido increased",
"sexual activity increased","kluver-bucy syndrome","erotophonophilia",
"exhibitionism", "fetishism","frotteurism", "masochism","paraphilia",
"paedophilia","sadism", "transvestism","voyeurism",
"sexually inappropriate behaviour"
),
"compulsive shopping" = list("compulsive shopping"),
"hyperphagia" = list("binge eating", "food craving","hyperphagia",
"increased appetite"
),
"kleptomania" = list("kleptomania", "shoplifting"),
"bipolar disorder" = as.list(MedDRA[hlt == "bipolar disorders"]$pt),
"headache" = as.list(MedDRA[hlgt == "headaches"]$pt)
)
custom_group <- disproportionality_analisis(
drug_selected,
reac_selected,
event_names = names(reac_selected)
)
df <- rbindlist(list(
df,
custom_group[, nested := "custom-groups"]
))
render_forest(df, "IC",
nested = TRUE,
nested_colors = c("salmon", "goldenrod", "steelblue", "limegreen","violet"),
threshold = 0, show_legend = TRUE,
row = "event", levs_row = names(reac_selected), facet_v = NA
)
View(MedDRA)
##
restriction <- intersect(intersect(deduplicated,bipolar_disorder),pre_warning)
complete <- disproportionality_analisis(
drug_selected,
reac_selected,
event_names = names(reac_selected)
restriction = restriction
##
restriction <- intersect(intersect(deduplicated,bipolar_disorder),pre_warning)
complete <- disproportionality_analisis(
drug_selected,
reac_selected,
event_names = names(reac_selected)
restriction = restriction
complete <- disproportionality_analisis(
drug_selected,
reac_selected,
event_names = names(reac_selected),
restriction = restriction
)
render_forest(complete, "IC", threshold = 0,
row = "event",
levs_row = reac_selected, facet_v = NA
)
render_forest(complete, "IC", threshold = 0,
row = "event",
levs_row = names(reac_selected), facet_v = NA
)
file.exists(paste0(here(), "/data/", quarter))
library(here)
file.exists(paste0(here(), "/data/", quarter))
paste0(here(), "/data/", quarter))
paste0(here(), "/data/", quarter)
quarter = "23Q1"
paste0(here(), "/data/", quarter)
file.exists(paste0(here(), "/data/", quarter))
?download.file
download.file(DiAna_url, destfile = zip_path,mode = "wb")
zip_path <- paste0(here(), "/data/", quarter, ".zip")
DiAna_url <- "https://osf.io/download/epkqf/"
download.file(DiAna_url, destfile = zip_path,mode = "wb")
timeout = 100000
options(timeout = max(timeout, getOption("timeout")))
download.file(DiAna_url, destfile = zip_path,mode = "wb")
unzip(zip_path, exdir = paste0(here(), "/data/"))
if(file.exists(paste0(here(), "/data/", quarter))){
file.remove(zip_path)
}
# Remove __MACOSX folder if it exists
macosx_folder <- paste0(here(), "/data/", "__MACOSX")
if (file.exists(macosx_folder)) {
unlink(macosx_folder, recursive = TRUE)
}
library(devtools)
styler::style_dir()
build_readme()
document()
remove.packages("DiAna")
load_all()
library(devtools)
load_all()
test()
check()
install()
library(devtools)
styler::style_dir()
build_readme()
document()
load_all()
test()
remove.packages("DiAna")
