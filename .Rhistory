if (nested != FALSE) geom_linerange(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8)), position = position_dodge(dodge),size = 1)
} +
{
if (nested != FALSE) geom_point(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8), size = (log10(D_E))),position = position_dodge(dodge))
} +
geom_vline(aes(xintercept = threshold), linetype = "dashed") +
xlab(index) +
ylab("") +
scale_x_continuous(trans = transformation) +
theme_bw() +
scale_alpha_continuous(guide = "none") +
guides(shape = guide_legend(override.aes = list(size = 5))) +
scale_size_area(guide = "none") +
{ if (nested == FALSE) labs(color = "Signal") } +
{ if (nested != FALSE) labs(color = "Analysis") } +
scale_color_manual(values = colors, drop = FALSE)
ggplot(data = df, aes(x=median, xmin = lower,  xmax = upper,
y = factor(get(row), levels = levs_row)),
position = position_dodge(dodge),show.legend = show_legend,
alpha = 0.7) +
{
if (nested == FALSE)
geom_linerange(aes(color=color), size = 1)
} +
{ if (nested == FALSE)
geom_point(aes(color = color, size = (log10(D_E))))
} +
{
if (nested != FALSE) geom_linerange(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8)), position = position_dodge(dodge),size = 1)
} +
{
if (nested != FALSE) geom_point(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8), size = (log10(D_E))),position = position_dodge(dodge))
} +
{
if (!is.na(facet_v)) facet_wrap(factor(get(facet_v)) ~ ., labeller = label_wrap_gen(width = 15), ncol = 4)
} +
geom_vline(aes(xintercept = threshold), linetype = "dashed") +
xlab(index) +
ylab("") +
scale_x_continuous(trans = transformation) +
theme_bw() +
scale_alpha_continuous(guide = "none") +
guides(shape = guide_legend(override.aes = list(size = 5))) +
scale_size_area(guide = "none") +
{ if (nested == FALSE) labs(color = "Signal") } +
{ if (nested != FALSE) labs(color = "Analysis") } +
scale_color_manual(values = colors, drop = FALSE)
facet_v = NA
ggplot(data = df, aes(x=median, xmin = lower,  xmax = upper,
y = factor(get(row), levels = levs_row)),
position = position_dodge(dodge),show.legend = show_legend,
alpha = 0.7) +
{
if (nested == FALSE)
geom_linerange(aes(color=color), size = 1)
} +
{ if (nested == FALSE)
geom_point(aes(color = color, size = (log10(D_E))))
} +
{
if (nested != FALSE) geom_linerange(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8)), position = position_dodge(dodge),size = 1)
} +
{
if (nested != FALSE) geom_point(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8), size = (log10(D_E))),position = position_dodge(dodge))
} +
{
if (!is.na(facet_v)) facet_wrap(factor(get(facet_v)) ~ ., labeller = label_wrap_gen(width = 15), ncol = 4)
} +
geom_vline(aes(xintercept = threshold), linetype = "dashed") +
xlab(index) +
ylab("") +
scale_x_continuous(trans = transformation) +
theme_bw() +
scale_alpha_continuous(guide = "none") +
guides(shape = guide_legend(override.aes = list(size = 5))) +
scale_size_area(guide = "none") +
{ if (nested == FALSE) labs(color = "Signal") } +
{ if (nested != FALSE) labs(color = "Analysis") } +
scale_color_manual(values = colors, drop = FALSE)
facet_v <- "event"
ggplot(data = df, aes(x=median, xmin = lower,  xmax = upper,
y = factor(get(row), levels = levs_row)),
position = position_dodge(dodge),show.legend = show_legend,
alpha = 0.7) +
{
if (nested == FALSE)
geom_linerange(aes(color=color), size = 1)
} +
{ if (nested == FALSE)
geom_point(aes(color = color, size = (log10(D_E))))
} +
{
if (nested != FALSE) geom_linerange(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8)), position = position_dodge(dodge),size = 1)
} +
{
if (nested != FALSE) geom_point(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8), size = (log10(D_E))),position = position_dodge(dodge))
} +
{
if (!is.na(facet_v)) facet_wrap(factor(get(facet_v)) ~ ., labeller = label_wrap_gen(width = 15), ncol = 4)
} +
geom_vline(aes(xintercept = threshold), linetype = "dashed") +
xlab(index) +
ylab("") +
scale_x_continuous(trans = transformation) +
theme_bw() +
scale_alpha_continuous(guide = "none") +
guides(shape = guide_legend(override.aes = list(size = 5))) +
scale_size_area(guide = "none") +
{ if (nested == FALSE) labs(color = "Signal") } +
{ if (nested != FALSE) labs(color = "Analysis") } +
scale_color_manual(values = colors, drop = FALSE)
ggplot(data = df, aes(x=median, xmin = lower,  xmax = upper,
y = factor(get(row), levels = levs_row)),
position = position_dodge(dodge),show.legend = show_legend,
alpha = 0.7) +
{
if (nested == FALSE)
geom_linerange(aes(color=color), size = 1)
} +
{ if (nested == FALSE)
geom_point(aes(color = color, size = (log10(D_E))))
} +
{
if (nested != FALSE) geom_linerange(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8)), position = position_dodge(dodge),size = 1)
} +
{
if (nested != FALSE) geom_point(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8), size = (log10(D_E))),position = position_dodge(dodge))
} +
{
if (!is.na(facet_v)) facet_wrap(factor(get(facet_v)) ~ ., labeller = label_wrap_gen(width = 15), ncol = 4)
} +
{
if (!is.na(facet_h)) facet_grid(rows = facet_h, labeller = label_wrap_gen(width = 25), scales = "free", space = "free", switch = "y")
} +
geom_vline(aes(xintercept = threshold), linetype = "dashed") +
xlab(index) +
ylab("") +
scale_x_continuous(trans = transformation) +
theme_bw() +
scale_alpha_continuous(guide = "none") +
guides(shape = guide_legend(override.aes = list(size = 5))) +
scale_size_area(guide = "none") +
{ if (nested == FALSE) labs(color = "Signal") } +
{ if (nested != FALSE) labs(color = "Analysis") } +
scale_color_manual(values = colors, drop = FALSE)
facet_h = NA
ggplot(data = df, aes(x=median, xmin = lower,  xmax = upper,
y = factor(get(row), levels = levs_row)),
position = position_dodge(dodge),show.legend = show_legend,
alpha = 0.7) +
{
if (nested == FALSE)
geom_linerange(aes(color=color), size = 1)
} +
{ if (nested == FALSE)
geom_point(aes(color = color, size = (log10(D_E))))
} +
{
if (nested != FALSE) geom_linerange(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8)), position = position_dodge(dodge),size = 1)
} +
{
if (nested != FALSE) geom_point(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8), size = (log10(D_E))),position = position_dodge(dodge))
} +
{
if (!is.na(facet_v)) facet_wrap(factor(get(facet_v)) ~ ., labeller = label_wrap_gen(width = 15), ncol = 4)
} +
{
if (!is.na(facet_h)) facet_grid(rows = facet_h, labeller = label_wrap_gen(width = 25), scales = "free", space = "free", switch = "y")
} +
geom_vline(aes(xintercept = threshold), linetype = "dashed") +
xlab(index) +
ylab("") +
scale_x_continuous(trans = transformation) +
theme_bw() +
scale_alpha_continuous(guide = "none") +
guides(shape = guide_legend(override.aes = list(size = 5))) +
scale_size_area(guide = "none") +
{ if (nested == FALSE) labs(color = "Signal") } +
{ if (nested != FALSE) labs(color = "Analysis") } +
scale_color_manual(values = colors, drop = FALSE)
ggplot(data = df, aes(x=median, xmin = lower,  xmax = upper,
y = factor(get(row), levels = levs_row)),
position = position_dodge(dodge),show.legend = show_legend,
alpha = 0.7) +
{
if (nested == FALSE)
geom_linerange(aes(color=color), size = 1)
} +
{ if (nested == FALSE)
geom_point(aes(color = color, size = (log10(D_E))))
} +
{
if (nested != FALSE) geom_linerange(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8)), position = position_dodge(dodge),size = 1)
} +
{
if (nested != FALSE) geom_point(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8), size = (log10(D_E))),position = position_dodge(dodge))
} +
{
if (!is.na(facet_v)) facet_wrap(factor(get(facet_v)) ~ ., labeller = label_wrap_gen(width = 15), ncol = 4)
} +
{
if (!is.na(facet_h)) facet_grid(rows = facet_h, labeller = label_wrap_gen(width = 25), scales = "free", space = "free", switch = "y")
} +
geom_vline(aes(xintercept = threshold), linetype = "dashed") +
xlab(index) +
ylab("") +
scale_x_continuous(trans = transformation) +
theme_bw() +
scale_alpha_continuous(guide = "none") +
guides(shape = guide_legend(override.aes = list(size = 5))) +
scale_size_area(guide = "none") +
{ if (nested == FALSE) labs(color = "Signal") } +
{ if (nested != FALSE) labs(color = "Analysis") } +
scale_color_manual(values = colors, drop = FALSE)+
theme(
strip.placement = "outside", strip.text.y.left = element_text(angle = 0, size = 7), legend.position = "bottom",
legend.justification = "left",
legend.title = element_blank()
) +
guides(shape = guide_legend(override.aes = list(size = 5))) +
scale_size_area(guide = "none")
render_forest <- function(df,
index = "IC",
row = "substance",
levs_row = NA,
nested = FALSE,
show_legend = TRUE,
transformation = "identity",
custom_threshold = NA,
text_size_legend = 15,
dodge = .3,
nested_colors = NA,
facet_v = NA,
facet_h = NA
) {
if(length(levs_row)==1){levs_row <- unique(df[[row]] %>% droplevels())}
if (index == "ROR") {
colors =c("gray25","gray", "yellow", "red")
threshold=1}
if (index == "IC") {
colors =c("gray", "red")
threshold=0}
if (!is.na(custom_threshold)){threshold = custom_threshold}
df$median <- df[[paste0(index,"_median")]]
df$lower <- df[[paste0(index,"_lower")]]
df$upper <- df[[paste0(index,"_upper")]]
df$color <- df[[paste0(index,"_color")]]
if(nested!=FALSE){
df$nested <- df[[nested]]
colors = nested_colors}
ggplot(data = df, aes(x=median, xmin = lower,  xmax = upper,
y = factor(get(row), levels = levs_row)),
position = position_dodge(dodge),show.legend = show_legend,
alpha = 0.7) +
{
if (nested == FALSE)
geom_linerange(aes(color=color), size = 1)
} +
{ if (nested == FALSE)
geom_point(aes(color = color, size = (log10(D_E))))
} +
{
if (nested != FALSE) geom_linerange(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8)), position = position_dodge(dodge),size = 1)
} +
{
if (nested != FALSE) geom_point(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8), size = (log10(D_E))),position = position_dodge(dodge))
} +
{
if (!is.na(facet_v)) facet_wrap(factor(get(facet_v)) ~ ., labeller = label_wrap_gen(width = 15), ncol = 4)
} +
{
if (!is.na(facet_h)) facet_grid(rows = facet_h, labeller = label_wrap_gen(width = 25), scales = "free", space = "free", switch = "y")
} +
geom_vline(aes(xintercept = threshold), linetype = "dashed") +
xlab(index) +
ylab("") +
scale_x_continuous(trans = transformation) +
theme_bw() +
scale_alpha_continuous(guide = "none") +
guides(shape = guide_legend(override.aes = list(size = 5))) +
scale_size_area(guide = "none") +
{ if (nested == FALSE) labs(color = "Signal") } +
{ if (nested != FALSE) labs(color = "Analysis") } +
scale_color_manual(values = colors, drop = FALSE)+
theme(
strip.placement = "outside", strip.text.y.left = element_text(angle = 0, size = 7), legend.position = "bottom",
legend.justification = "left",
legend.title = element_blank()
) +
guides(shape = guide_legend(override.aes = list(size = 5))) +
scale_size_area(guide = "none")
}
render_forest(df,nested = "analysis")
length(unique(df[[nested]]))
render_forest <- function(df,
index = "IC",
row = "substance",
levs_row = NA,
nested = FALSE,
show_legend = TRUE,
transformation = "identity",
custom_threshold = NA,
text_size_legend = 15,
dodge = .3,
nested_colors = NA,
facet_v = NA,
facet_h = NA
) {
if(length(levs_row)==1){levs_row <- unique(df[[row]] %>% droplevels())}
if (index == "ROR") {
colors =c("gray25","gray", "yellow", "red")
threshold=1}
if (index == "IC") {
colors =c("gray", "red")
threshold=0}
if (!is.na(custom_threshold)){threshold = custom_threshold}
df$median <- df[[paste0(index,"_median")]]
df$lower <- df[[paste0(index,"_lower")]]
df$upper <- df[[paste0(index,"_upper")]]
df$color <- df[[paste0(index,"_color")]]
if(nested!=FALSE){
df$nested <- df[[nested]]
colors = nested_colors
if (colors = NA) {
render_forest(df,nested = "analysis")
render_forest <- function(df,
index = "IC",
row = "substance",
levs_row = NA,
nested = FALSE,
show_legend = TRUE,
transformation = "identity",
custom_threshold = NA,
text_size_legend = 15,
dodge = .3,
nested_colors = NA,
facet_v = NA,
facet_h = NA
) {
if(length(levs_row)==1){levs_row <- unique(df[[row]] %>% droplevels())}
if (index == "ROR") {
colors =c("gray25","gray", "yellow", "red")
threshold=1}
if (index == "IC") {
colors =c("gray", "red")
threshold=0}
if (!is.na(custom_threshold)){threshold = custom_threshold}
df$median <- df[[paste0(index,"_median")]]
df$lower <- df[[paste0(index,"_lower")]]
df$upper <- df[[paste0(index,"_upper")]]
df$color <- df[[paste0(index,"_color")]]
if(nested!=FALSE){
df$nested <- df[[nested]]
colors = nested_colors
if (colors = NA) {
c("goldenrod","steelblue","salmon2",
"green4","brown","violet","blue4")[1:length(unique(df[[nested]]))]
render_forest <- function(df,
index = "IC",
row = "substance",
levs_row = NA,
nested = FALSE,
show_legend = TRUE,
transformation = "identity",
custom_threshold = NA,
text_size_legend = 15,
dodge = .3,
nested_colors = NA,
facet_v = NA,
facet_h = NA
) {
if(length(levs_row)==1){levs_row <- unique(df[[row]] %>% droplevels())}
if (index == "ROR") {
colors =c("gray25","gray", "yellow", "red")
threshold=1}
if (index == "IC") {
colors =c("gray", "red")
threshold=0}
if (!is.na(custom_threshold)){threshold = custom_threshold}
df$median <- df[[paste0(index,"_median")]]
df$lower <- df[[paste0(index,"_lower")]]
df$upper <- df[[paste0(index,"_upper")]]
df$color <- df[[paste0(index,"_color")]]
if(nested!=FALSE){
df$nested <- df[[nested]]
colors = nested_colors
if (is.na(colors)) {
colors <- c("goldenrod","steelblue","salmon2",
"green4","brown","violet","blue4")[1:length(unique(df[[nested]]))]
}}
ggplot(data = df, aes(x=median, xmin = lower,  xmax = upper,
y = factor(get(row), levels = levs_row)),
position = position_dodge(dodge),show.legend = show_legend,
alpha = 0.7) +
{
if (nested == FALSE)
geom_linerange(aes(color=color), size = 1)
} +
{ if (nested == FALSE)
geom_point(aes(color = color, size = (log10(D_E))))
} +
{
if (nested != FALSE) geom_linerange(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8)), position = position_dodge(dodge),size = 1)
} +
{
if (nested != FALSE) geom_point(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8), size = (log10(D_E))),position = position_dodge(dodge))
} +
{
if (!is.na(facet_v)) facet_wrap(factor(get(facet_v)) ~ ., labeller = label_wrap_gen(width = 15), ncol = 4)
} +
{
if (!is.na(facet_h)) facet_grid(rows = facet_h, labeller = label_wrap_gen(width = 25), scales = "free", space = "free", switch = "y")
} +
geom_vline(aes(xintercept = threshold), linetype = "dashed") +
xlab(index) +
ylab("") +
scale_x_continuous(trans = transformation) +
theme_bw() +
scale_alpha_continuous(guide = "none") +
guides(shape = guide_legend(override.aes = list(size = 5))) +
scale_size_area(guide = "none") +
{ if (nested == FALSE) labs(color = "Signal") } +
{ if (nested != FALSE) labs(color = "Analysis") } +
scale_color_manual(values = colors, drop = FALSE)+
theme(
strip.placement = "outside", strip.text.y.left = element_text(angle = 0, size = 7), legend.position = "bottom",
legend.justification = "left",
legend.title = element_blank()
) +
guides(shape = guide_legend(override.aes = list(size = 5))) +
scale_size_area(guide = "none")
}
render_forest(df,nested = "analysis")
render_forest <- function(df,
index = "IC",
row = "substance",
levs_row = NA,
nested = FALSE,
show_legend = TRUE,
transformation = "identity",
custom_threshold = NA,
text_size_legend = 15,
dodge = .3,
nested_colors = NA,
facet_v = NA,
facet_h = NA
) {
if(length(levs_row)==1){levs_row <- unique(df[[row]] %>% droplevels())}
if (index == "ROR") {
colors =c("gray25","gray", "yellow", "red")
threshold=1}
if (index == "IC") {
colors =c("gray", "red")
threshold=0}
if (!is.na(custom_threshold)){threshold = custom_threshold}
df$median <- df[[paste0(index,"_median")]]
df$lower <- df[[paste0(index,"_lower")]]
df$upper <- df[[paste0(index,"_upper")]]
df$color <- df[[paste0(index,"_color")]]
if(nested!=FALSE){
df$nested <- df[[nested]]
colors = nested_colors
if (is.na(colors)) {
colors <- c("goldenrod","steelblue","salmon2",
"green4","brown","violet","blue4")[1:length(unique(df[[nested]]))]
}}
ggplot(data = df, aes(x=median, xmin = lower,  xmax = upper,
y = factor(get(row), levels = levs_row)),
position = position_dodge(dodge),show.legend = show_legend,
alpha = 0.7) +
{
if (nested == FALSE)
geom_linerange(aes(color=color), size = 1)
} +
{ if (nested == FALSE)
geom_point(aes(color = color, size = (log10(D_E))))
} +
{
if (nested != FALSE) geom_linerange(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8)), position = position_dodge(dodge),size = 1)
} +
{
if (nested != FALSE) geom_point(aes(color = nested, alpha = ifelse(lower > threshold, 1, .8), size = (log10(D_E))),position = position_dodge(dodge))
} +
{
if (!is.na(facet_v)) facet_wrap(factor(get(facet_v)) ~ ., labeller = label_wrap_gen(width = 15), ncol = 4)
} +
{
if (!is.na(facet_h)) facet_grid(rows = facet_h, labeller = label_wrap_gen(width = 25), scales = "free", space = "free", switch = "y")
} +
geom_vline(aes(xintercept = threshold), linetype = "dashed") +
xlab(index) +
ylab("") +
scale_x_continuous(trans = transformation) +
theme_bw() +
scale_alpha_continuous(guide = "none") +
guides(shape = guide_legend(override.aes = list(size = 5))) +
scale_size_area(guide = "none") +
{ if (nested == FALSE) labs(color = "Signal") } +
{ if (nested != FALSE) labs(color = "Analysis") } +
scale_color_manual(values = colors, drop = FALSE)+
theme(
strip.placement = "outside", strip.text.y.left = element_text(angle = 0, size = 7), legend.position = "bottom",
legend.justification = "left",
legend.title = element_blank()
) +
guides(shape = guide_legend(override.aes = list(size = 5)))
}
render_forest(df,nested = "analysis")
render_forest(df,nested = "analysis",facet_v = "event")
render_forest(df)
import("DRUG", "23Q1") # import FAERS drug information
remove.packages("DiAna")
