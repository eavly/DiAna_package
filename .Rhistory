Drug <- import("DRUG", "23Q1")
DiAna_url <- "https://osf.io/download/epkqf/"
quarter == "23Q1"
# Download and extract DiAna data
zip_path <- paste0(here(), "/data/", quarter, ".zip")
quarter = "23Q1"
library(devtools)
styler::style_dir()
build_readme()
document()
load_all()
test()
install()
library(devtools)
styler::style_dir()
build_readme()
document()
load_all()
test()
remove.packages("DiAna")
install()
load_all()
library(devtools)
load_all()
install()
library(DiAna)
library(DiAna)
# setup_DiAna("23Q1")
drug_selected <- "aripiprazole"
reac_selected <- list(
"gambling disorder",
"hypersexuality",
"compulsive shopping",
"hyperphagia",
"kleptomania",
"bipolar disorder"
"depression"
reac_selected <- list(
"gambling disorder",
"hypersexuality",
"compulsive shopping",
"hyperphagia",
"kleptomania",
"bipolar disorder",
"depression"
)
# setup_DiAna("23Q1")
drug_selected <- "aripiprazole"
reac_selected <- list(
"gambling disorder",
"hypersexuality",
"compulsive shopping",
"hyperphagia",
"kleptomania",
"bipolar disorder",
"headache"
)
Drug <- import("DRUG", "23Q1")
Reac <- import("REAC", "23Q1")
DPA_df <- disproportionality_analisis(
drug_selected,
reac_selected
)
render_forest(DPA_df, "IC", threshold = 0,
row = "event",
levs_row = reac_selected, facet_v = NA
)
##
MedDRA <- setDT(
read_delim("~/Desktop/DIANA-on-FAERS/External Sources/hltsoc_binder.csv",
";",
escape_double = FALSE, trim_ws = TRUE
)
)[, .(def, soc, hlgt, hlt, pt)] %>% distinct()
library(data.table)
##
MedDRA <- setDT(
read_delim("~/Desktop/DIANA-on-FAERS/External Sources/hltsoc_binder.csv",
";",
escape_double = FALSE, trim_ws = TRUE
)
)[, .(def, soc, hlgt, hlt, pt)] %>% distinct()
use_package("data.table", type = "depends")
styler::style_dir()
build_readme()
document()
remove.packages("DiAna")
load_all()
test()
check()
load_all()
library(devtools)
load_all()
install()
library(DiAna)
# setup_DiAna("23Q1")
drug_selected <- "aripiprazole"
reac_selected <- list(
"gambling disorder", #ICD
"hypersexuality", #ICD
"compulsive shopping", #ICD
"hyperphagia", #ICD
"kleptomania", #ICD
"bipolar disorder", #bias
"headache" #positive control
)
Drug <- import("DRUG", "23Q1")
Reac <- import("REAC", "23Q1")
DPA_df <- disproportionality_analisis(
drug_selected,
reac_selected
)
render_forest(DPA_df, "IC", threshold = 0,
row = "event",
levs_row = reac_selected, facet_v = NA
)
##
MedDRA <- setDT(
read_delim("~/Desktop/DIANA-on-FAERS/External Sources/hltsoc_binder.csv",
";",
escape_double = FALSE, trim_ws = TRUE
)
)[, .(def, soc, hlgt, hlt, pt)] %>% distinct()
##
deduplicated <- Demo[RB_duplicates_only_susp == FALSE]$primaryid
##
Demo <- import("DEMO", "23Q1")
Indi <- import("INDI", "23Q1")
deduplicated <- Demo[RB_duplicates_only_susp == FALSE]$primaryid
bipolar_disorder <- Indi[indi_pt %in% MedDRA[
hlgt == "manic and bipolar mood disorders and disturbances"
]$pt]$primaryid
deduplicated <- Demo[RB_duplicates_only_susp == FALSE]$primaryid
DPA_df_deduplicated <- disproportionality_analisis(
drug_selected,
reac_selected,
restriction = deduplicated
)
df <- rbindlist(list(
DPA_df[, nested := "main"],
DPA_df_deduplicated[, nested := "deduplicated"]
))
DPA_df_bipolar <- disproportionality_analisis(
drug_selected,
reac_selected,
restriction = bipolar_disorder
)
df <- rbindlist(list(
df,
DPA_df_bipolar[, nested := "bipolar"]
))
warning_date <- 20160305
pre_warning <- Demo[init_fda_dt < warning_date]$primaryid
preW <- disproportionality_analisis(
drug_selected,
reac_selected,
restriction = pre_warning
)
df <- rbindlist(list(
df,
preW[, nested := "pre_warning"]
))
View(MedDRA)
##
reac_selected <- list(
"gambling disorder" = list("gambling disorder", "gambling"),
"hypersexuality" = list("compulsive sexual behaviour","hypersexuality",
"excessive masturbation","excessive sexual fantasies","libido increased",
"sexual activity increased","kluver-bucy syndrome","erotophonophilia",
"exhibitionism", "fetishism","frotteurism", "masochism","paraphilia",
"paedophilia","sadism", "transvestism","voyeurism",
"sexually inappropriate behaviour"
),
"compulsive shopping" = list("compulsive shopping"),
"hyperphagia" = list("binge eating", "food craving","hyperphagia",
"increased appetite"
),
"kleptomania" = list("kleptomania", "shoplifting"),
"bipolar disorder" = as.list(MedDRA[hlt == "bipolar disorders"]$pt),
"headache" = as.list(MedDRA[hlgt == "headaches"]$pt)
)
custom_group <- disproportionality_analisis(
drug_selected,
reac_selected,
event_names = names(reac_selected)
)
df <- rbindlist(list(
df,
custom_group[, nested := "custom-groups"]
))
render_forest(df, "IC",
nested = TRUE,
nested_colors = c("salmon", "goldenrod", "steelblue", "limegreen","violet"),
threshold = 0, show_legend = TRUE,
row = "event", levs_row = names(reac_selected), facet_v = NA
)
View(MedDRA)
##
restriction <- intersect(intersect(deduplicated,bipolar_disorder),pre_warning)
complete <- disproportionality_analisis(
drug_selected,
reac_selected,
event_names = names(reac_selected)
restriction = restriction
##
restriction <- intersect(intersect(deduplicated,bipolar_disorder),pre_warning)
complete <- disproportionality_analisis(
drug_selected,
reac_selected,
event_names = names(reac_selected)
restriction = restriction
complete <- disproportionality_analisis(
drug_selected,
reac_selected,
event_names = names(reac_selected),
restriction = restriction
)
render_forest(complete, "IC", threshold = 0,
row = "event",
levs_row = reac_selected, facet_v = NA
)
render_forest(complete, "IC", threshold = 0,
row = "event",
levs_row = names(reac_selected), facet_v = NA
)
file.exists(paste0(here(), "/data/", quarter))
library(here)
file.exists(paste0(here(), "/data/", quarter))
paste0(here(), "/data/", quarter))
paste0(here(), "/data/", quarter)
quarter = "23Q1"
paste0(here(), "/data/", quarter)
file.exists(paste0(here(), "/data/", quarter))
?download.file
download.file(DiAna_url, destfile = zip_path,mode = "wb")
zip_path <- paste0(here(), "/data/", quarter, ".zip")
DiAna_url <- "https://osf.io/download/epkqf/"
download.file(DiAna_url, destfile = zip_path,mode = "wb")
timeout = 100000
options(timeout = max(timeout, getOption("timeout")))
download.file(DiAna_url, destfile = zip_path,mode = "wb")
unzip(zip_path, exdir = paste0(here(), "/data/"))
if(file.exists(paste0(here(), "/data/", quarter))){
file.remove(zip_path)
}
# Remove __MACOSX folder if it exists
macosx_folder <- paste0(here(), "/data/", "__MACOSX")
if (file.exists(macosx_folder)) {
unlink(macosx_folder, recursive = TRUE)
}
library(devtools)
styler::style_dir()
build_readme()
document()
remove.packages("DiAna")
load_all()
library(devtools)
load_all()
test()
check()
install()
library(devtools)
styler::style_dir()
build_readme()
document()
load_all()
test()
remove.packages("DiAna")
library(devtools)
load_all()
install()
library(DiAna)
# setup_DiAna("23Q1")
drug_selected <- "aripiprazole"
reac_selected <- list(
"gambling disorder",
"hypersexuality",
"compulsive shopping",
"hyperphagia",
"kleptomania",
"bipolar disorder",
"headache"
)
Drug <- import("DRUG", "23Q1")
Reac <- import("REAC", "23Q1")
pids_ari <- unique(Drug[substance==drug_selected]$primaryid)
hierarchycal_rates(pids_ari)
MedDRA <- setDT(
read_delim("~/Desktop/DIANA-on-FAERS/External Sources/hltsoc_binder.csv",
";",
escape_double = FALSE, trim_ws = TRUE
)
)[, .(def, soc, hlgt, hlt, pt)] %>% distinct()
pids_ari <- unique(Drug[substance==drug_selected]$primaryid)
hierarchycal_rates(pids_ari)
hierarchycal_rates(pids_ari,"test.csv")
str_to_title("DRUG")
import <- function(df_name, quarter, pids = NA) {
path <- paste0(here(), "/data/", quarter, "/", df_name, ".rds")
if (!file.exists(path)) {
stop("The dataset specified does not exist")
} else {
t <- setDT(readRDS(path))
if (sum(!is.na(pids)) > 0) {
t <- t[primaryid %in% pids]
}
assign(str_to_title(df_name), t, envir = .GlobalEnv )
}
}
import("REAC")
library("here")
import("REAC")
import("REAC",quarter="23Q1")
import("REAC",quarter="23Q1")
import <- function(df_name, quarter, pids = NA) {
path <- paste0(here(), "/data/", quarter, "/", df_name, ".rds")
if (!file.exists(path)) {
stop("The dataset specified does not exist")
} else {
t <- setDT(readRDS(path))
if (sum(!is.na(pids)) > 0) {
t <- t[primaryid %in% pids]
}
assign(str_to_title(df_name), t, envir = .GlobalEnv )
}
t
}
import("REAC",quarter="23Q1")
library(devtools)
styler::style_dir()
build_readme()
document()
remove.packages("DiAna")
library(devtools)
load_all()
install()
import_MedDRA <- function(){
path <- paste0(here(), "/external_sources/meddra_primary.csv")
if (!file.exists(path)) {
stop("The MedDRA is not available with DiAna since the subscription must be done with MEDDRA MSSO.
Once MedDRA is downloaded, you can use the steps provided in https://github.com/fusarolimichele/DiAna
to make it ready for download.")
} else {
MedDRA <- setDT(
read_delim(path,
";",
escape_double = FALSE, trim_ws = TRUE
)
)[, .(def, soc, hlgt, hlt, pt)] %>% distinct()
assign("MeDDRA", MedDRA, envir = .GlobalEnv)
}
MedDRA
}
import_MedDRA()
library("here")
import_MedDRA()
import_MedDRA <- function(){
path <- paste0(here(), "/external_sources/meddra_primary.csv")
if (!file.exists(path)) {
stop("The MedDRA is not available with DiAna since the subscription must be done with MEDDRA MSSO.
Once MedDRA is downloaded, you can use the steps provided in https://github.com/fusarolimichele/DiAna
to make it ready for download.")
} else {
MedDRA <- setDT(
read_delim(path,
";",
escape_double = FALSE, trim_ws = TRUE
)
)[, .(def, soc, hlgt, hlt, pt)] %>% distinct()
assign("MedDRA", MedDRA, envir = .GlobalEnv)
}
MedDRA
}
import_MedDRA()
import("DEMO")
import("DEMO","23Q1")
library(DiAna) # access DiAna
drug_selected <- "aripiprazole" # define the drug of interest
reac_selected <- list( # define the events of interest
"gambling disorder",
"hypersexuality",
"compulsive shopping",
"hyperphagia",
"kleptomania",
"bipolar disorder",
"headache"
)
import("DRUG", "23Q1") # import FAERS drug information
import("REAC", "23Q1") # import FAERS reaction information
DPA_df <- disproportionality_analisis( # perform disproportionality analysis
drug_selected,
reac_selected
)
render_forest(DPA_df, "IC", threshold = 0, # visualize forest plot
row = "event",
levs_row = reac_selected, facet_v = NA
)
import("DEMO", "23Q1") # import demographic information
deduplicated <- Demo[RB_duplicates_only_susp == FALSE]$primaryid # identify deduplicated reports
DPA_df_deduplicated <- disproportionality_analisis( # disproportionality analysis with restriction
drug_selected,
reac_selected,
restriction = deduplicated
)
df <- rbindlist(list( # storing together the results of different analyses
DPA_df[, nested := "main"],
DPA_df_deduplicated[, nested := "deduplicated"]
))
render_forest(df, "IC", # compare the results using a forest plot
nested = TRUE,
nested_colors = c("salmon", "goldenrod"),
threshold = 0, show_legend = TRUE,
row = "event", levs_row = names(reac_selected), facet_v = NA
)
render_forest(df, "IC", # compare the results using a forest plot
nested = TRUE,
nested_colors = c("salmon", "goldenrod"),
threshold = 0, show_legend = TRUE,
row = "event", levs_row =reac_selected, facet_v = NA
)
##
import("INDI", "23Q1") # import indications information
import_MedDRA() # import MedDRA hierarchy
bipolar_disorder <- Indi[indi_pt %in% MedDRA[ # select reports with bipolar disorder among indications
hlgt == "manic and bipolar mood disorders and disturbances"
]$pt]$primaryid
DPA_df_bipolar <- disproportionality_analisis( # disproportionality analysis with restriction
drug_selected,
reac_selected,
restriction = bipolar_disorder
)
df <- rbindlist(list( # storing together the results of different analyses
df,
DPA_df_bipolar[, nested := "bipolar"]
))
df <- rbindlist(list( # storing together the results of different analyses
df,
DPA_df_bipolar[, nested := "bipolar"]
),fill = TRUE)
render_forest(df, "IC", # compare the results using a forest plot
nested = TRUE,
nested_colors = c("salmon", "goldenrod", "steelblue"),
threshold = 0, show_legend = TRUE,
row = "event", levs_row = reac_selected, facet_v = NA
)
warning_date <- 20160305 # define the warning date
pre_warning <- Demo[init_fda_dt < warning_date]$primaryid # select only reports submitted before the warning
preW <- disproportionality_analisis( # disproportionality analysis with restriction
drug_selected,
reac_selected,
restriction = pre_warning
)
df <- rbindlist(list( # storing together the results of different analyses
df,
preW[, nested := "pre_warning"]
))
df <- rbindlist(list( # storing together the results of different analyses
df,
preW[, nested := "pre_warning"]
), fill = TRUE)
render_forest(df, "IC", # compare the results using a forest plot
nested = TRUE,
nested_colors = c("salmon", "goldenrod", "steelblue","limegreen"),
threshold = 0, show_legend = TRUE,
row = "event", levs_row = reac_selected, facet_v = NA
)
##
reac_selected <- list( # redefined reaction for higher sensitivity
"gambling disorder" = list("gambling disorder", "gambling"),
"hypersexuality" = list("compulsive sexual behaviour","hypersexuality",
"excessive masturbation","excessive sexual fantasies","libido increased",
"sexual activity increased","kluver-bucy syndrome","erotophonophilia",
"exhibitionism", "fetishism","frotteurism", "masochism","paraphilia",
"paedophilia","sadism", "transvestism","voyeurism",
"sexually inappropriate behaviour"
),
"compulsive shopping" = list("compulsive shopping"),
"hyperphagia" = list("binge eating", "food craving","hyperphagia",
"increased appetite"
),
"kleptomania" = list("kleptomania", "shoplifting"),
"bipolar disorder" = as.list(MedDRA[hlt == "bipolar disorders"]$pt),
"headache" = as.list(MedDRA[hlgt == "headaches"]$pt)
)
custom_group <- disproportionality_analisis( # perform the disproportionality analysis
drug_selected,
reac_selected,
event_names = names(reac_selected)
)
df <- rbindlist(list( # storing together the results of different analyses
df,
custom_group[, nested := "custom-groups"]
),fill=TRUE)
render_forest(df, "IC", # compare the results using a forest plot
nested = TRUE,
nested_colors = c("salmon", "goldenrod", "steelblue","limegreen","violet"),
threshold = 0, show_legend = TRUE,
row = "event", levs_row = names(reac_selected), facet_v = NA
)
##
restriction <- intersect(intersect(deduplicated,bipolar_disorder),pre_warning) # integrate all the restrictions
complete <- disproportionality_analisis( # disproportionality
drug_selected,
reac_selected,
event_names = names(reac_selected),
restriction = restriction
)
render_forest(complete, "IC", threshold = 0, # forest plot
row = "event",
levs_row = names(reac_selected), facet_v = NA
)
remove.packages("DiAna")
